# FROM TEST: Database Schema Diagram

##  PUBLIC.BOOKS.AUTHORS

## Columns
- ID (INTEGER)
- FIRSTNAME (VARCHAR)
- LASTNAME (VARCHAR)
- ADDRESS1 (VARCHAR)
- ADDRESS2 (VARCHAR)
- CITY (VARCHAR)
- STATE (CHARACTER)
- POSTALCODE (VARCHAR)
- COUNTRY (VARCHAR)

## Primary Key
("ID") 

## Indexes
- IDX_B_AUTHORS ("LASTNAME", "FIRSTNAME")
- IDX_A_AUTHORS ("CITY", "STATE", "POSTALCODE", "COUNTRY")

## Foreign Keys
-  PUBLIC.BOOKS.AUTHORS --> PUBLIC.BOOKS.BOOKAUTHORS



##  PUBLIC.BOOKS.BOOKS

## Columns
- ID (INTEGER)
- TITLE (VARCHAR)
- DESCRIPTION (VARCHAR)
- PUBLISHERID (INTEGER)
- PUBLICATIONDATE (DATE)
- PRICE (DOUBLE)
- PREVIOUSEDITIONID (INTEGER)

## Primary Key
("ID") 

## Indexes
- U_PREVIOUSEDITION ("PREVIOUSEDITIONID"), unique index
- FK_PREVIOUSEDITION ("PREVIOUSEDITIONID")

## Foreign Keys
-  PUBLIC.BOOKS.BOOKS --> PUBLIC.BOOKS.BOOKAUTHORS
-  PUBLIC.BOOKS.BOOKS --> PUBLIC.BOOKS.BOOKS
-  PUBLIC.BOOKS.BOOKS --> PUBLIC."PUBLISHER SALES".SALES



##  PUBLIC.BOOKS."Celebrities"

## Columns
- Id (INTEGER)
- NAME (VARCHAR)

## Primary Key
("Id") 

## Indexes

## Foreign Keys
-  PUBLIC.BOOKS."Celebrities" --> PUBLIC.BOOKS."Celebrity Updates"



##  PUBLIC.BOOKS.COUPONS

## Columns
- ID (INTEGER)
- DATA (CLOB)
- COUPONS (PUBLIC.BOOKS."INTEGER ARRAY")
- BOOKS (PUBLIC.BOOKS."VARCHAR(20) ARRAY[10]")

## Primary Key
("ID") 

## Indexes



##  PUBLIC.BOOKS.CUSTOMERDATA

## Columns
- ID (INTEGER)
- DATA (PUBLIC.BOOKS.VALID_STRING)

## Primary Key
("ID") 

## Indexes



##  PUBLIC.BOOKS.CUSTOMERS

## Columns
- ID (INTEGER)
- FIRSTNAME (PUBLIC.BOOKS.NAME_TYPE)
- LASTNAME (PUBLIC.BOOKS.NAME_TYPE)
- AGE (PUBLIC.BOOKS.AGE_TYPE)

## Primary Key
("ID") 

## Indexes



##  PUBLIC.BOOKS.PUBLISHERS

## Columns
- ID (INTEGER)
- PUBLISHER (VARCHAR)

## Primary Key
("ID") 

## Indexes

## Foreign Keys
-  PUBLIC.BOOKS.PUBLISHERS --> PUBLIC.BOOKS.ΒΙΒΛΊΑ



##  PUBLIC."PUBLISHER SALES".REGIONS

## Columns
- CITY (VARCHAR)
- STATE (VARCHAR)
- POSTALCODE (VARCHAR)
- COUNTRY (VARCHAR)

## Primary Key
("POSTALCODE", "COUNTRY") 

## Indexes

## Foreign Keys
-  PUBLIC."PUBLISHER SALES".REGIONS --> PUBLIC."PUBLISHER SALES".SALES



##  PUBLIC."PUBLISHER SALES".SALESDATA

## Columns
- SALESDATAID (INTEGER)
- YEARLYAMOUNT (DOUBLE)

## Indexes
- UQ_CUSTOMERS ("SALESDATAID"), unique index

## Foreign Keys
-  PUBLIC."PUBLISHER SALES".SALESDATA --> PUBLIC."PUBLISHER SALES".SALES



##  PUBLIC.BOOKS.BOOKAUTHORS

## Columns
- BOOKID (INTEGER)
- AUTHORID (INTEGER)
- SOMEDATA (VARCHAR)

## Indexes
- Z_FK_AUTHOR ("AUTHORID")
- SYS_FK_10120 ("BOOKID")
- UIDX_BOOKAUTHORS ("BOOKID", "AUTHORID"), unique index



##  PUBLIC.BOOKS."Celebrity Updates"

## Columns
- Celebrity Id (INTEGER)
- UPDATE (VARCHAR)

## Primary Key
("Celebrity Id") 

## Indexes



##  PUBLIC.BOOKS.ΒΙΒΛΊΑ

## Columns
- ΜΟΝΑΔΙΚΌΣ (SMALLINT)
- ΤΊΤΛΟΣ (VARCHAR)
- ΠΕΡΙΓΡΑΦΉ (VARCHAR)
- ΕΚΔΌΤΗΣ (SMALLINT)

## Primary Key
("ΜΟΝΑΔΙΚΌΣ") 

## Indexes
- FK_ΒΙΒΛΊΑ_PUBLISHERS ("ΕΚΔΌΤΗΣ")



##  PUBLIC."PUBLISHER SALES".SALES

## Columns
- POSTALCODE (VARCHAR)
- COUNTRY (VARCHAR)
- BOOKID (INTEGER)
- COUPON_ID (INTEGER)
- PERIODENDDATE (DATE)
- TOTALAMOUNT (DOUBLE)
- SALESDATAID (INTEGER)

## Indexes
- FK_SALES_BOOK ("BOOKID")
- FK_SALES_SALESDATA ("SALESDATAID")
- FK_SALES_REGIONS ("POSTALCODE", "COUNTRY")



##  PUBLIC.BOOKS.AUTHORSLIST

## Columns
- ID (INTEGER)
- FIRSTNAME (VARCHAR)
- LASTNAME (VARCHAR)



